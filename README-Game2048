參考網站
程式碼部分:
https://www.bilibili.com/video/av19689831/?p=12
https://www.cnblogs.com/mercuryli/p/4868380.html
技術問題:
https://blog.csdn.net/a591243801/article/details/67640114
https://blog.csdn.net/huangxiaohu_coder/article/details/8497286
https://developer.android.com/reference/android/view/ViewGroup.LayoutParams

實機機種:OPPO A7Xpro

製作過程:
網站上的程式碼由於Android版本不同
"所以照抄是無法運作的"

主要的原因在於OnSizeChanged在開發時已經無法在自訂義View時載入方法
與之相關同時在載入時要使用的startGame方法也需要更著改變
我只會列出這個程式開發時的主要問題,其他小功能沒有更動的部分在原著中都有詳細的解說
還有一些小問題會在我的流程中敘述

一.Card方法製作過程
二.遊戲主程式:判斷上下左右、移動數字、合併數字
三.添加隨機數

===================================================================================================================================
一.

剛開始我的卡片類不知為何無法成功addView,畫面出不來
所以更改教學上的步驟
先成功實現addCard,讓TextView成功顯示
再設定Card方法改變TextView的屬性
最後在完成setNum、getNum、aequals方法

這部分有幾個重點
可以參考這部分解釋https://blog.csdn.net/huangxiaohu_coder/article/details/8497286
錯誤的訊息為“Binary XML file line # : Error inflating class”
1.引用類別路徑的問題:我將gameView的路徑直接取代GridLayout的名稱進行UI控制,複製錯誤或是沒有完整的路徑名稱
2.在自訂義View時,三種Context載入方法都必須實現
3.修改了原有因版本差異導致在新版Android Studio在建構中無法獲取到的的OnSizeChanged方法,改為getCardWidth方法,這樣便可以在建構時獲取到螢幕的寬高
4.由於原著將startGame方法包含在OnSizeChanged裡,而OnSizeChanged進行了更改,所以startGame方法需要更改建構順序
我的想法是在initGame裡所有建構完字卡片等等的方法完畢後,再重新清空掉一次卡片的數據,重新添加我們需要的隨機數
所以再三種載入的Context方法裡除了initGame又增加了startGame方法

===================================================================================================================================

二.

接著設計主程式需要判斷上、下、左、右滑動合併卡片的部分
遊戲需要判斷你手指往哪個方向滑動以進行合併數字的動作
所以使用了switch case在手指按下及放開時進行判斷

這部分需要注意
5.當我實現完成了四種滑動方向的判斷
我使用Toast顯示出我滑動的結果
例如swipeLeft(),判斷往左滑後,Toast將會顯示Left
來判斷我的四個方法是否成功實現
有時候在做一些小功能時debug就要一步一步慢慢進行
才不會到了後面出錯結果找不到在哪裡

接著是實現卡片合併&判斷的過程,以swipeLeft()舉例
有一層if中,有個x--或是y--
是為了防止如果兩張卡片相同,結果卻無法合併的情況
所以將迴圈倒退上一步,再檢查一次

if(judge){
            addRandomNum();
        }
        checkOverGame();
這段的用意是指如果數字有移動或是合併
就會隨機增加數字,以確保遊戲繼續進行
而原著中將checkOverGame()也放進了if判斷
這樣如果沒有移動或是合併就沒辦法判斷遊戲
這是我自己修改的小地方
過程會變為
滑動手指>判斷方向>迴圈合併or移動數字>添加隨機數>檢查遊戲是否結束
以保證遊戲能夠在最後一次確定會結束

6.這是我在開發過程中打錯的地方,也是個陷阱
如果你寫成if(judge=true)
這個判斷式會恆真

===================================================================================================================================

三.添加隨機數
這個部分碰巧發現的
因為我不小心將滑動或是合併就增加隨機數的if判斷式設定成always true
造成會永遠進入到發現了我在addRandomNum裡的錯誤
錯誤情況為,我所有的卡片都有了數字後,在滑動一次就會崩潰
而OPPO的手機似乎對底層的設定有進行更改
所以我怎麼看都看不到我的錯誤訊息
經過了高人指點以及自己用try catch抓錯誤
發現了如果全部格子都有值,代表addRandomNum()裡的emptyPoint在for迴圈後還會是空的
emptyPoint.remove(int)就丟出了IndexOutOfBoundException index:0 Size:0的錯誤
